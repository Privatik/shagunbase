[{"correctAnswer":"Отказ от кэширования в памяти","listQuestion":["Отказ от кэширования в памяти","Кэширование в памяти","Изображение будет загружаться занаво, при исчезновении с поля зрения","Кэширует исходные и преобразованные данные"],"section":"Glide","title":"Что делает функция \".skipMemoryCache(true)\""},{"correctAnswer":"Данные не сохраняется в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.NONE\""},{"correctAnswer":"Исходные данные сохраняются в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.SOURCE\""},{"correctAnswer":"Сохраняет результат данных после преобразований в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.RESULT\""},{"correctAnswer":"new RequestListener<String, Bitmap>()","listQuestion":["new RequestListener<String, Bitmap>()","new View.OnClickListener()","new RecyclerView.Adapter<VH>()","new ListenerView()"],"section":"Glide","title":"Функция \".listener()\" принимает значение"},{"correctAnswer":"Показывать анимированные GIF","listQuestion":["Показывать анимированные GIF","Запускает анимацию","Делает не анимированую картинку статичной","Метод который вызывается что бы создать анимацию"],"section":"Glide","title":"Что делает функция \".asGif()\""},{"correctAnswer":"Отключает анимацию","listQuestion":["Отключает анимацию","Запускает анимацию","Делает не анимированую картинку статичной","Метод который вызывается что бы создать анимацию"],"section":"Glide","title":"Что делает функция \".dontAnimate()\""},{"correctAnswer":"Изменить размер картинки","listQuestion":["Изменить размер картинки","Указать время выполнения анимации","Налаживает одно изображение поверх другого, по определеной площади","Стереть определеную площать картинки"],"section":"Glide","title":"Что делает функция \".override(int,int)\""},{"correctAnswer":"Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","listQuestion":["Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","Отменяет маштабирование","Устанавливает изобрадение по центру"],"section":"Glide","title":"Что делает функция \".fitCenter()\""},{"correctAnswer":"Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","listQuestion":["Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","Отменяет маштабирование","Устанавливает изобрадение по центру"],"section":"Glide","title":"Что делает функция \".centerCrop()\""},{"correctAnswer":"Что будет показано пока не загрузится и отобразится нужное изображение","listQuestion":["Что будет показано пока не загрузится и отобразится нужное изображение","Устанавливает картинку","Удаляет указаную картинку","Проверка на наличие изображения"],"section":"Glide","title":"Что делает функция \".placeholder(int resourceId)\""},{"correctAnswer":"Возвращает сосотояние активности","listQuestion":["Возвращает состояние активности","проверяет наличие активности","Удаляет слушателя текущай активности","Обновляет состояние активности"],"section":"Lifecycle","title":"Что делает функция \".getCurrentState()\""},{"correctAnswer":"Какое lifecycle-событие должено быть вызвано","listQuestion":["Какое lifecycle-событие должено быть вызвано","Запускать событие соответсвующее \"OnStart\"","Запускать событие соответсвующее \"OnStop\"","Данный метод будет вызываться автоматически"],"section":"Lifecycle","title":"Что делает аннотация \"@OnLifecycleEvent\""},{"correctAnswer":"Подписывает LifecycleObserver","listQuestion":["Подписывает LifecycleObserver","Удаляет LifecycleObserver","Добавляет LifecycleObserver в список","Создает LifecycleObserver"],"section":"Lifecycle","title":"Что делает функция \"getLifecycle().addObserver(LifecycleObserver)\""},{"correctAnswer":"Подписывает LifecycleObserver","listQuestion":["Подписывает LifecycleObserver","Удаляет LifecycleObserver","Добавляет LifecycleObserver в список","Создает LifecycleObserver"],"section":"Lifecycle","title":"Что делает функция \"getLifecycle().addObserver(LifecycleObserver)\""},{"correctAnswer":"Для самостоятельного обьявления кастомной Activity/Fragment, которые еще не поддерживают новый компонент","listQuestion":["Для самостоятельного обьявления кастомной Activity/Fragment, которые еще не поддерживают новый компонент","Замена класса Lifecycle","Для отслеживаний переходов между обьекта реализующими класс Lifecycle","Старая версия Lifecycle"],"section":"Lifecycle","title":"Зачем нужны класс \"LifecycleRegistry\" и интерфейс \"LifecycleRegistryOwner\""},{"correctAnswer":"LiveData автоматически отпишет от себя его observer","listQuestion":["LiveData автоматически отпишет от себя его observer","Ошибка","Ничего","Если observer не отписан, тогда Activty пересоздается"],"section":"LiveData","title":"Если Activity перейдет в статус DESTROYED"},{"correctAnswer":"Подписка не будет выполнена","listQuestion":["Подписка не будет выполнена","Activity пересоздается, подписка будет выполнена","Ничего","Ошибка"],"section":"LiveData","title":"Если Activity в состоянии DESTROYED попробует подписаться"},{"correctAnswer":"Подписка не будет выполнена","listQuestion":["Подписка не будет выполнена","Activity пересоздается, подписка будет выполнена","Ничего","Ошибка"],"section":"LiveData","title":"Если Activity в состоянии DESTROYED попробует подписаться"},{"correctAnswer":"observe(LifecycleOwner, Observer<T>)","listQuestion":["observe(LifecycleOwner, Observer<T>)","observeForever(Observer<T>)","Подписывается автоматически при создании активности","setValue(T)"],"section":"LiveData","title":"Как подписать активность на LiveData? с учетом жизненного цикла"},{"correctAnswer":"С помощью интерфейса Observer<T>","listQuestion":["С помощью интерфейса Observer<T>","С помощью метода getValue()","С помощью специального класса MutableLiveData","Данная функия не требует реализации, так как все всроенно в систему"],"section":"LiveData","title":"Как отслеживать изменения в LiveData?"},{"correctAnswer":"MutableLiveData не абстрактный класс и методы setValue(T) и postValue(T) выведены в api","listQuestion":["MutableLiveData не абстрактный класс и методы setValue(T) и postValue(T) выведены в api","LiveData является наследником MutableLiveData","В MutableLiveData не методов setValue(T), getValue()","MutableLiveData интерфейс, а LiveData абстрактный класс"],"section":"LiveData","title":"В чем главная разница между MutableLiveData и LiveData?"},{"correctAnswer":"Дает возможность собирать данные из нескольких LiveData в один","listQuestion":["Дает возможность собирать данные из нескольких LiveData в один","Такого класса нет!","Наследник класса Activity и LiveData","Готовый холтер"],"section":"LiveData","title":"Зачем нужен класс MediatorLiveData?"},{"correctAnswer":"LiveData<T>, Observer<T>","listQuestion":["LiveData<T>","Observer<T>","MediatorLiveData()","LiveData<T>, Observer<T>"],"section":"LiveData","title":"Какие параметры принимает метод \"MediatorLiveData.addSource(...)\"?"},{"correctAnswer":"Количество подписчиков изменилось с 0 на 1","listQuestion":["Количество подписчиков изменилось с 0 на 1","Количество подписчиков изменилось с 1 на 0","Вызывается при инициализации","Проверка на активность"],"section":"LiveData","title":"За что отвечает метод \"onActive()\"?"},{"correctAnswer":"LiveData<T>, Function<T,P>","listQuestion":["LiveData<T>, Function<T,P>","Observer<T>","Function<T,P>","LiveData<T>, Observer<T>"],"section":"LiveData","title":"Какие параметры принимает метод \"Transformations.map(...)\"?"},{"correctAnswer":"В switchMap принимает параметр Function<T,LiveData<P>>","listQuestion":["В switchMap принимает параметр Function<T,LiveData<P>>","В map принимает параметр Function<T,LiveData<P>>","switchMap не принимает обьект LiveData<T>","switchMap сразу может обращаться к Observer<P>"],"section":"LiveData","title":"В чем разница между \"Transformations.switchMap(...)\" и \"Transformations.map(...)\"?"},{"correctAnswer":"Ошибка","listQuestion":["Ошибка","Присвоит значение T","Вернет значение T","Ничего"],"section":"LiveData","title":"Что будет если вызвать \"setValue(T)\" не из UI потока?"},{"correctAnswer":"Количество подписчиков изменилось с 1 на 0","listQuestion":["Количество подписчиков изменилось с 1 на 0","Количество подписчиков изменилось с 0 на 1","Вызывается при удалении Activity","Отписывается"],"section":"LiveData","title":"Что делает функция \"onInactive()\"?"}]