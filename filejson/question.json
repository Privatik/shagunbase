[{"correctAnswer":"Отказ от кэширования в памяти","listQuestion":["Отказ от кэширования в памяти","Кэширование в памяти","Изображение будет загружаться занаво, при исчезновении с поля зрения","Кэширует исходные и преобразованные данные"],"section":"Glide","title":"Что делает функция \".skipMemoryCache(true)\""},{"correctAnswer":"Данные не сохраняется в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.NONE\""},{"correctAnswer":"Исходные данные сохраняются в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.SOURCE\""},{"correctAnswer":"Сохраняет результат данных после преобразований в кэше","listQuestion":["Данные не сохраняется в кэше","Сохраняет результат данных после преобразований в кэше","Кэширует исходные и преобразованные данные","Исходные данные сохраняются в кэше"],"section":"Glide","title":"Что делает следующее значение \"DiskCacheStrategy.RESULT\""},{"correctAnswer":"new RequestListener<String, Bitmap>()","listQuestion":["new RequestListener<String, Bitmap>()","new View.OnClickListener()","new RecyclerView.Adapter<VH>()","new ListenerView()"],"section":"Glide","title":"Функция \".listener()\" принимает значение"},{"correctAnswer":"Показывать анимированные GIF","listQuestion":["Показывать анимированные GIF","Запускает анимацию","Делает не анимированую картинку статичной","Метод который вызывается что бы создать анимацию"],"section":"Glide","title":"Что делает функция \".asGif()\""},{"correctAnswer":"Отключает анимацию","listQuestion":["Отключает анимацию","Запускает анимацию","Делает не анимированую картинку статичной","Метод который вызывается что бы создать анимацию"],"section":"Glide","title":"Что делает функция \".dontAnimate()\""},{"correctAnswer":"Изменить размер картинки","listQuestion":["Изменить размер картинки","Указать время выполнения анимации","Налаживает одно изображение поверх другого, по определеной площади","Стереть определеную площать картинки"],"section":"Glide","title":"Что делает функция \".override(int,int)\""},{"correctAnswer":"Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","listQuestion":["Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","Отменяет маштабирование","Устанавливает изобрадение по центру"],"section":"Glide","title":"Что делает функция \".fitCenter()\""},{"correctAnswer":"Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","listQuestion":["Масштабирует изображение равномерно так, чтобы изображение вместилось в данную область","Масштабирует изображение равномерно так, чтобы изображение заполняло данную область","Отменяет маштабирование","Устанавливает изобрадение по центру"],"section":"Glide","title":"Что делает функция \".centerCrop()\""},{"correctAnswer":"Что будет показано пока не загрузится и отобразится нужное изображение","listQuestion":["Что будет показано пока не загрузится и отобразится нужное изображение","Устанавливает картинку","Удаляет указаную картинку","Проверка на наличие изображения"],"section":"Glide","title":"Что делает функция \".placeholder(int resourceId)\""},{"correctAnswer":"Возвращает сосотояние активности","listQuestion":["Возвращает состояние активности","проверяет наличие активности","Удаляет слушателя текущай активности","Обновляет состояние активности"],"section":"Lifecycle","title":"Что делает функция \".getCurrentState()\""},{"correctAnswer":"Какое lifecycle-событие должено быть вызвано","listQuestion":["Какое lifecycle-событие должено быть вызвано","Запускать событие соответсвующее \"OnStart\"","Запускать событие соответсвующее \"OnStop\"","Данный метод будет вызываться автоматически"],"section":"Lifecycle","title":"Что делает аннотация \"@OnLifecycleEvent\""},{"correctAnswer":"Подписывает LifecycleObserver","listQuestion":["Подписывает LifecycleObserver","Удаляет LifecycleObserver","Добавляет LifecycleObserver в список","Создает LifecycleObserver"],"section":"Lifecycle","title":"Что делает функция \"getLifecycle().addObserver(LifecycleObserver)\""},{"correctAnswer":"Подписывает LifecycleObserver","listQuestion":["Подписывает LifecycleObserver","Удаляет LifecycleObserver","Добавляет LifecycleObserver в список","Создает LifecycleObserver"],"section":"Lifecycle","title":"Что делает функция \"getLifecycle().addObserver(LifecycleObserver)\""},{"correctAnswer":"Для самостоятельного обьявления кастомной Activity/Fragment, которые еще не поддерживают новый компонент","listQuestion":["Для самостоятельного обьявления кастомной Activity/Fragment, которые еще не поддерживают новый компонент","Замена класса Lifecycle","Для отслеживаний переходов между обьекта реализующими класс Lifecycle","Старая версия Lifecycle"],"section":"Lifecycle","title":"Зачем нужны класс \"LifecycleRegistry\" и интерфейс \"LifecycleRegistryOwner\""},{"correctAnswer":"LiveData автоматически отпишет от себя его observer","listQuestion":["LiveData автоматически отпишет от себя его observer","Ошибка","Ничего","Если observer не отписан, тогда Activty пересоздается"],"section":"LiveData","title":"Если Activity перейдет в статус DESTROYED"},{"correctAnswer":"Подписка не будет выполнена","listQuestion":["Подписка не будет выполнена","Activity пересоздается, подписка будет выполнена","Ничего","Ошибка"],"section":"LiveData","title":"Если Activity в состоянии DESTROYED попробует подписаться"},{"correctAnswer":"Подписка не будет выполнена","listQuestion":["Подписка не будет выполнена","Activity пересоздается, подписка будет выполнена","Ничего","Ошибка"],"section":"LiveData","title":"Если Activity в состоянии DESTROYED попробует подписаться"},{"correctAnswer":"observe(LifecycleOwner, Observer<T>)","listQuestion":["observe(LifecycleOwner, Observer<T>)","observeForever(Observer<T>)","Подписывается автоматически при создании активности","setValue(T)"],"section":"LiveData","title":"Как подписать активность на LiveData? с учетом жизненного цикла"},{"correctAnswer":"С помощью интерфейса Observer<T>","listQuestion":["С помощью интерфейса Observer<T>","С помощью метода getValue()","С помощью специального класса MutableLiveData","Данная функия не требует реализации, так как все всроенно в систему"],"section":"LiveData","title":"Как отслеживать изменения в LiveData?"},{"correctAnswer":"MutableLiveData не абстрактный класс и методы setValue(T) и postValue(T) выведены в api","listQuestion":["MutableLiveData не абстрактный класс и методы setValue(T) и postValue(T) выведены в api","LiveData является наследником MutableLiveData","В MutableLiveData не методов setValue(T), getValue()","MutableLiveData интерфейс, а LiveData абстрактный класс"],"section":"LiveData","title":"В чем главная разница между MutableLiveData и LiveData?"},{"correctAnswer":"Дает возможность собирать данные из нескольких LiveData в один","listQuestion":["Дает возможность собирать данные из нескольких LiveData в один","Такого класса нет!","Наследник класса Activity и LiveData","Готовый холтер"],"section":"LiveData","title":"Зачем нужен класс MediatorLiveData?"},{"correctAnswer":"LiveData<T>, Observer<T>","listQuestion":["LiveData<T>","Observer<T>","MediatorLiveData()","LiveData<T>, Observer<T>"],"section":"LiveData","title":"Какие параметры принимает метод \"MediatorLiveData.addSource(...)\"?"},{"correctAnswer":"Количество подписчиков изменилось с 0 на 1","listQuestion":["Количество подписчиков изменилось с 0 на 1","Количество подписчиков изменилось с 1 на 0","Вызывается при инициализации","Проверка на активность"],"section":"LiveData","title":"За что отвечает метод \"onActive()\"?"},{"correctAnswer":"LiveData<T>, Function<T,P>","listQuestion":["LiveData<T>, Function<T,P>","Observer<T>","Function<T,P>","LiveData<T>, Observer<T>"],"section":"LiveData","title":"Какие параметры принимает метод \"Transformations.map(...)\"?"},{"correctAnswer":"В switchMap принимает параметр Function<T,LiveData<P>>","listQuestion":["В switchMap принимает параметр Function<T,LiveData<P>>","В map принимает параметр Function<T,LiveData<P>>","switchMap не принимает обьект LiveData<T>","switchMap сразу может обращаться к Observer<P>"],"section":"LiveData","title":"В чем разница между \"Transformations.switchMap(...)\" и \"Transformations.map(...)\"?"},{"correctAnswer":"Ошибка","listQuestion":["Ошибка","Присвоит значение T","Вернет значение T","Ничего"],"section":"LiveData","title":"Что будет если вызвать \"setValue(T)\" не из UI потока?"},{"correctAnswer":"Количество подписчиков изменилось с 1 на 0","listQuestion":["Количество подписчиков изменилось с 1 на 0","Количество подписчиков изменилось с 0 на 1","Вызывается при удалении Activity","Отписывается"],"section":"LiveData","title":"Что делает функция \"onInactive()\"?"},{"correctAnswer":"Запрашиваем у провайдера конкретную модель ViewModule","listQuestion":["Запрашиваем у провайдера конкретную модель ViewModule","Удаляет у провайдера конкретную модель ViewModule","Достает из массива у провайдера конкретную модель ViewModule","Создает у провайдера конкретную модель ViewModule"],"section":"ViewModule","title":"Что делает метод \"ViewModelProviders.of(Activity).get(ViewModule)\"?"},{"correctAnswer":"Когда Activity окончательно закрывается, провайдер удаляет ViewModele","listQuestion":["Когда Activity окончательно закрывается, провайдер удаляет ViewModele","Удаление ViewModele","Очистка ViewModele","При повороте, ViewModule будут пересоздоваться"],"section":"ViewModule","title":"Что делает метод \"onCleared()\"?"},{"correctAnswer":"Не ограниченное значение","listQuestion":["Не ограниченное значение","1-10","1","Этот класс не хранит ViewModule"],"section":"ViewModule","title":"Сколько ViewModule может хранить ViewModelProviders?"},{"correctAnswer":"Класс, позволяющий сохранять необходимые им объекты при повороте экрана","listQuestion":["Класс, позволяющий сохранять необходимые им объекты при повороте экрана","Очистка экрана от ненужной памяти","Является устаревшим классом и сейчас нигде не используется","Для корректного отображения элементом на View"],"section":"ViewModule","title":"Для чего нужен ViewModule?"},{"correctAnswer":"AndroidViewModel принимает конструктор Application","listQuestion":["AndroidViewModel принимает конструктор Application","AndroidViewModel принимает конструктор Context","AndroidViewModel берет меньше памяти при ассинхроной работе","AndroidViewModel берет больше памяти при ассинхроной работе"],"section":"ViewModule","title":"Разница AndroidViewModel и ViewModule?"},{"correctAnswer":"Для передачи в модель какие-либо данные при создании","listQuestion":["Для передачи в модель какие-либо данные при создании","ViewModule который не умерат при закрытия приложения","Для работы с несколькими ViewModule","Класс холтер"],"section":"ViewModule","title":"Зачем нуден класс ViewModelProvider.NewInstanceFactory?"},{"correctAnswer":"@Entity и @PrimaryKey","listQuestion":["@Entity и @PrimaryKey","@Entity","@Dao и @PrimaryKey","@Database"],"section":"Room","title":"Какие обязательные(ый) аннотации(ия) должны(а) быть в классе, что бы сделать из него таблицу?"},{"correctAnswer":"Для писывать методы для работы с базой данных","listQuestion":["Для писывать методы для работы с базой данных","Класс который будет от него инициализирован будем базой","Для обьеденения двух баз","Это сама база данных"],"section":"Room","title":"Зачем используется интерфейс с аннотацией Dao?"},{"correctAnswer":"@Insert","listQuestion":["@Insert","@Update","@Delete","@Query"],"section":"Room","title":"Какая аннотация служит для добавления обьектов в базу данных?"},{"correctAnswer":"Основной класс по работе с базой данных","listQuestion":["Основной класс по работе с базой данных","Сама база данных","Этой аннотацией помечается метод, с помощью которого делаться SQL запросы","Класс для хранения обьектов"],"section":"Room","title":"Какой абстрактынй класс помечается аннотацией @Database?"},{"correctAnswer":"Указать свое имя для переменой","listQuestion":["Указать свое имя для переменой","Не сохранять переменую в таблицу","Преобразовать ее в другой тип","Сделать переменую индивидуальной в каждой таблице"],"section":"Room","title":"Для чего нужна аннотация @ColumnInfo?"},{"correctAnswer":"@Query","listQuestion":["@Insert","@Update","@Delete","@Query"],"section":"Room","title":"Какая аннотация служит для получения информации из базы данных?"},{"correctAnswer":"Внешний ключ","listQuestion":["Внешний ключ","Внутрений ключ","Составной ключ","Интегрированый ключ"],"section":"Room","title":"За что отвечает слудующая аннотация @Entity(foreignKeys = @ForeignKey(entity = Employee.class, parentColumns = \"id\", childColumns = \"child_id\"))?"},{"correctAnswer":"Позволяют связывать таблицы между собой","listQuestion":["Позволяют связывать таблицы между собой","Позволяет связаться с LiveDate","Такого понятия нет","Позволяет связаться с Activity"],"section":"Room","title":"Зачем нужен внешний ключ?"},{"correctAnswer":"База данных сама будет генерировать значение, если вы его не укажете","listQuestion":["База данных сама будет генерировать значение, если вы его не укажете","В случаи ошибки считывания база сама создаст значение","Подобрать нужный тип автоматически","Не сохранять переменую, так как она не нужна, и будет создаваться автоматически во время вызова"],"section":"Room","title":"Что делает данная аннотация @PrimaryKey(autoGenerate = true)?"},{"correctAnswer":"База будет следить, чтобы в этой таблице не было повторений","listQuestion":["База будет следить, чтобы в этой таблице не было повторений","Переменная является индексом","Переменная будет ключем","Установить переменой значение по дефолту"],"section":"Room","title":"Что делает данная аннотация @ColumnInfo(index = true)?"},{"correctAnswer":"Взять поля из переменной(наш класс) и считать их полями таблицы","listQuestion":["Взять поля из переменной(наш класс) и считать их полями таблицы","Не включать переменную в таблицу","Переменная будет ключем","В случаи ошибки ее не сохранять"],"section":"Room","title":"Что делает данная аннотация @Embedded?"},{"correctAnswer":"Поле не должно записываться в базу","listQuestion":["Поле не должно записываться в базу","Игнорировать вызов данного метода","Во время вызова генерировать исключение","Не отображать переменную при вызове"],"section":"Room","title":"Что делает данная аннотация @Ignore?"},{"correctAnswer":"В случаи совпадений старая запись будет заменена новой","listQuestion":["В случаи совпадений старая запись будет заменена новой","База содержит только один желемент и он постоянно перезаписывается","Не записывать элемент если его ещё нет в таблице","Дает ограничение на запись"],"section":"Room","title":"Что делает данная аннотация @Insert(onConflict = OnConflictStrategy.REPLACE)?"},{"correctAnswer":"В случаи совпадений старая запись не будет заменена новой","listQuestion":["В случаи совпадений старая запись не будет заменена новой","Игнорировать занисение в таблицу","Ограничить таблицу на запись параметром который выставляется заранее","Какие-то записи не сохранять"],"section":"Room","title":"Что делает данная аннотация @Insert(onConflict = OnConflictStrategy.IGNORE)?"},{"correctAnswer":"Количество удаленных записей","listQuestion":["Количество удаленных записей","ID первой удаленной записи","ID последней удаленной записи","возращает в зависимости от успеха удаления число"],"section":"Room","title":"Что вернет данный метод \\n @Delete \\nint delete(List<Employee> employee)?"},{"correctAnswer":"Позволяет выполнять несколько методов в рамках одной транзакции","listQuestion":["Позволяет выполнять несколько методов в рамках одной транзакции","Производит транзакцию между двумя классами","Быстрая и не сложная в применении БД","Происходит транзакция обмена данных между двумя объектами"],"section":"Room","title":"Что делает данная аннотация @Transaction?"},{"correctAnswer":"Да","listQuestion":["Да","Нет, код вызовет ошибку","Да, но чего-то не хватает...","С LiveData такие операции не возможны"],"section":"Room","title":"Возможна ли такая запись \\n @Query(\"SELECT * FROM employee\") \\nLiveData<List<Employee>> getAll()?"},{"correctAnswer":"Технология позволяющая получить определенные поля и базы данных","listQuestion":["Технология позволяющая получить определенные поля и базы данных","Подгруппа","Позволяется соединять две таблицы","Такого понятия нет"],"section":"Room","title":"Что такое Subsets?"},{"correctAnswer":"List или Set","listQuestion":["List или Set","Set или Map","List или миссивы","Map"],"section":"Room","title":"Какие типы принимает аннтотация @Relation?"},{"correctAnswer":"Чтобы вытянуть из класса Employee часть необходимых переменных","listQuestion":["Чтобы вытянуть из класса Employee часть необходимых переменных","Что полностью сзязать две таблиц одна из которых Employer","Удаление из всей таблиц особых переменных","В данной аннтоции ошибка"],"section":"Room","title":"Зачем используется данная аннотация @Relation(parentColumn = \"id\", entityColumn = \"department_id\", entity = Employee.class)?"},{"correctAnswer":"Запросы в одной транзакции, чтобы получить корректные данные","listQuestion":["Запросы в одной транзакции, чтобы получить корректные данные","Такой комбинации нет","Для получение двух разных ответов","Что бы отслеживать какая информация поступает"],"section":"Room","title":"Зачем используется сочетание Relation + Transaction?"},{"correctAnswer":"Для сохранениея в базу полей которые не являются примитивами","listQuestion":["Для сохранениея в базу полей которые не являются примитивами","Для перевода при сохранении в другой тип(Int - Double)","Узнать тип данных в таблице","Переформатирование таблицы"],"section":"Room","title":"Что делает аннотация @TypeConverter?"},{"correctAnswer":"Преобразует birthday к не видемому для нас примитиву и вернет обьект класса Employee","listQuestion":["Преобразует birthday к не видемому для нас примитиву и вернет обьект класса Employee","Не генерирует исключения при ошибке. просто пропускает","Найдет нужную нам дату","Ничего такой комбинации нет"],"section":"Room","title":"Что делает данный метод \\n @Query(\"SELECT * FROM employee WHERE birthday = :birthday\") \\n Employee getByDate(@TypeConverters({DateConverter.class}) Date birthday)?"},{"correctAnswer":"необходимо поднимать версию базы данных","listQuestion":["необходимо поднимать версию базы данных","такое не возможно","необходимо дать им специлаьную аннтоацию","Удалить всю базу и создать ее заново"],"section":"SQL","title":"Если вы меняете структуру базы данных..."},{"correctAnswer":"Сделать миграцию между версиями баз данных","listQuestion":["Сделать миграцию между версиями баз данных","Сделать миграцию в другую базу","Сделаеть миграцию из другой базы","Для получение внешних ключей"],"section":"Room","title":"Зачем нужен объект Migration?"},{"correctAnswer":".addMigrations(AppDatabase.MIGRATION_1_2)","listQuestion":[".addMigrations(AppDatabase.MIGRATION_1_2)",".putMigrations(AppDatabase.MIGRATION_1_2)",".cutMigrations(AppDatabase.MIGRATION_1_2)",".foundMigrations()"],"section":"Room","title":"Какой метод нужно вызвать у Room.databaseBuilder().. что бы указать миграцию версий?"},{"correctAnswer":"Когда сервис запущен методом startService","listQuestion":["Когда сервис запущен методом startService","При любом запуске сервиса","На в сервис поступает информация","При любом обращении к сервису"],"section":"Service","title":"Когда вызывается метод .onStartCommand ?"},{"correctAnswer":"Уничтожает сервис изнутри","listQuestion":["Уничтожает сервис изнутри","Преостонавливает сервис","Останавливает все сервисы за раз","Такого метода нет"],"section":"Service","title":"Что делает метод stopSelf()?"},{"correctAnswer":"Счетчик вызовов startService","listQuestion":["Счетчик вызовов startService","Хронит количество запущенных сервисов на телефоне","Такой переменой нет","Имя сервиса"],"section":"Service","title":"Какая роль у переменной startId?"},{"correctAnswer":"Уничтожает сервис под номером startId","listQuestion":["Уничтожает сервис под номером startId","Сервис на делает паузу на startId миллисекунд","Освобождает необходимое число памяти","Такого мотода нет"],"section":"Service","title":"Что делает метод stopSelf(startId)"},{"correctAnswer":"stopSelfResult(startId) возвращает boolean если после вызова этой функции сервис был остановлен","listQuestion":["stopSelfResult(startId) возвращает boolean если после вызова этой функции сервис был остановлен","stopSelfResult(startId) возращает результат работы сервиса","stopSelfResult(startId) не уничтожает сервис, а возращает промежуточный результат его работы","stopSelfResult(startId) одно и тоже просто одно использовалось в более раней версии"],"section":"Service","title":"В чем разницу между stopSelfResult(startId) и stopSelf(startId?"},{"correctAnswer":"Сервис не будет перезапущен после того, как был убит системой","listQuestion":["Сервис будет перезапущен после того, как был убит системой. Кроме этого, сервис снова получит все вызовы startService, которые не были завершены методом stopSelf(startId)","Сервис будет перезапущен после того, как был убит системой","Сервис не будет перезапущен после того, как был убит системой","Такого флага нет"],"section":"Service","title":"Что делает флаг onStartCommand.START_NOT_STICKY?"},{"correctAnswer":"Сервис будет перезапущен после того, как был убит системой","listQuestion":["Сервис будет перезапущен после того, как был убит системой. Кроме этого, сервис снова получит все вызовы startService, которые не были завершены методом stopSelf(startId)","Сервис будет перезапущен после того, как был убит системой","Сервис не будет перезапущен после того, как был убит системой","Такого флага нет"],"section":"Service","title":"Что делает флаг onStartCommand.START_STICKY?"},{"correctAnswer":"Сервис будет перезапущен после того, как был убит системой. Кроме этого, сервис снова получит все вызовы startService, которые не были завершены методом stopSelf(startId)","listQuestion":["Сервис будет перезапущен после того, как был убит системой. Кроме этого, сервис снова получит все вызовы startService, которые не были завершены методом stopSelf(startId)","Сервис будет перезапущен после того, как был убит системой","Сервис не будет перезапущен после того, как был убит системой","Такого флага нет"],"section":"Service","title":"Что делает флаг onStartCommand.START_REDELIVER_INTENT?"},{"correctAnswer":"Мы получали такой вызов, но в прошлый раз","listQuestion":["Мы получали такой вызов, но в прошлый раз","Сервис удален системой","Сервис был вызван впервый раз","Ошибка при прикрощении работы сервиса"],"section":"Service","title":"Что делает флаг START_FLAG_REDELIVERY?"},{"correctAnswer":"Отправляет информацию из сервиса в активити","listQuestion":["Отправляет информацию из сервиса в активити","Просил информацию из активити","Отправляет почту","Нужен для запроса на разрешение использовать сервис в фоновом режиме"],"section":"Service","title":"Что делает метод PendingIntent.send()?"},{"correctAnswer":"Указывает, что метод является поставщиком объекта","listQuestion":["Указывает, что метод является поставщиком объекта","Указывает что метод является провайдером","Указывает что переменная является провайдером","Класс является компонентом"],"section":"Dagger2","title":"Для чего нужна аннотация @Provides?"},{"correctAnswer":"Для генерации класса DaggerAppComponent","listQuestion":["Для генерации класса DaggerAppComponent","Класс для хранения модулей","Класс для вызова модулей","Переменная поиска элементов в Dagger"],"section":"Dagger2","title":"Для чего нужна аннотация @Component?"},{"correctAnswer":"Ищем подходящий BroadcastReceiver для его реализации","listQuestion":["Ищем подходящий BroadcastReceiver для его реализации","Спрашивает существует ли BroadcastReceiver","Удаляет BroadcastReceiver","Делает запрос в класс BroadcastReceiver"],"section":"Service","title":"Что делает метод sendBroadcast?"},{"correctAnswer":"Для того чтобы знать когда мы подключились к сервису и когда связь с сервисом потеряна","listQuestion":["Для того чтобы знать когда мы подключились к сервису и когда связь с сервисом потеряна","Для подключения к сервису","Для передачи данных между сервисами","Хранит внутри себя информацию о всех сервисах на устройстве"],"section":"Service","title":"Зачем нужен объект ServiceConnection?"},{"correctAnswer":"При потере связи с сервисом","listQuestion":["При потере связи с сервисом","При перезаписи сервиса","При подключении с сервисом","Сам сервис вызывает при окончании работы"],"section":"Service","title":"Когда срабатывает метод onServiceDisconnected?"},{"correctAnswer":"Если сервис, к которому мы пытаемся подключиться, не работает, то он будет запущен","listQuestion":["Если сервис, к которому мы пытаемся подключиться, не работает, то он будет запущен","Запустить сервис","Перезапустить сервис","В случаи ошибки уведомить систему об этом"],"section":"Service","title":"Что означает флаг BIND_AUTO_CREATE?"},{"correctAnswer":"Нет","listQuestion":["Нет","Конечно сработает, это ведь остановка сервиса","Будет ошибка при таком удалении","Система будет ждать вызова onServiceDisconnected и так, и так"],"section":"Service","title":"При вызове метода unbindService сработает ли метод onServiceDisconnected?"}]